@using LearningLoop.Core.WebServices
@inherits ViewPage<AccountResponse>
@{
    ViewBag.BodyClass = "Home";
    Layout = "_Layout.cshtml";
}

@section pageHeader{
    <div class="ui large  breadcrumb">
        <a class="section">Home</a>
        <i class="right chevron icon divider"></i>
        <a class="section">Class</a>
        <i class="right chevron icon divider"></i>
        <div class="active section">Roster</div>
    </div>
}
<template id="roster-card-add-template">
    <div class="dimmable image" data-bind="cardDimmer, hidden: showEdit()">
        <div class="ui dimmer">
            <div class="content">
                <div class="center">
                    <div class="ui inverted button" data-bind="click:add">Add Child</div>
                </div>
            </div>
        </div>
        <img src="/img/no-profile-pic-200.png">
    </div>
    <div class="card" data-bind='visible: showEdit()'>
        <div class="content">
            <div class="ui small form">
                <form id="saveChild" action="@(new StudentRequest().ToPostUrl())" method="POST" enctype="multipart/form-data">
                    <div class="field">
                        <label><b>Profile Image</b></label>
                        <input type="file" name="ProfileImage" id="ProfileImage" />
                    </div>
                    <div class="field">
                        <label><b>First Name</b></label>
                        <input type="text" name="FirstName" id="FirstName" />
                    </div>
                    <div class="field">
                        <label><b>Last Name</b></label>
                        <input type="text" name="LastName" id="LastName" />
                    </div>
                    <div class="field">
                        <label>Gender</label>
                        <select class="ui dropdown" data-bind="dropdown">
                            <option value="">Gender</option>
                            <option value="Male">Male</option>
                            <option value="Female">Female</option>
                        </select>
                    </div>
                </form>
            </div>
        </div>
        <div class="extra content">
            <div class="left floated" data-bind="click: save">
                <i class="save icon"></i>
                Save
            </div>
            <div class="right floated" data-bind="click: undo">
                <i class="undo icon"></i>
                Undo
            </div>
        </div>
    </div>
</template>
<template id='roster-card-template'>
    <div class="image" data-bind="hidden: showEdit()">
        <img data-bind="attr: { src: imagePath }">
    </div>
    <div class="content">
        <div class="header" data-bind="text: name"></div>
        <div class="meta" data-bind="hidden: showEdit()">
            <a class="time">Last Update 2 days ago</a>
        </div>
    </div>
    <div class="extra content">
        <div class="left floated" data-bind="hidden: showEdit(), click:edit">
            <i class="edit icon"></i>
            Edit
        </div>
        <div class="right floated" data-bind="hidden: showEdit(), click:remove">
            <i class="remove icon"></i>
            Delete
        </div>
    </div>
    <div class="card" data-bind='visible: showEdit()'>
        <div class="content">
            <div class="ui small form">
                <form id="saveChild" action="@(new StudentRequest().ToPostUrl())" method="POST" enctype="multipart/form-data">
                    <div class="field">
                        <label><b>Profile Image</b></label>
                        <input type="file" name="ProfileImage" id="ProfileImage" />
                    </div>
                    <div class="field">
                        <label><b>First Name</b></label>
                        <input type="text" name="FirstName" id="FirstName" data-bind="attr: { value: firstName }" />
                    </div>
                    <div class="field">
                        <label><b>Last Name</b></label>
                        <input type="text" name="LastName" id="LastName" data-bind="attr: { value: lastName }" />
                    </div>
                    <div class="field">
                        <label>Gender</label>
                        <select class="ui dropdown" data-bind="dropdown">
                            <option value="">Gender</option>
                            <option value="Male">Male</option>
                            <option value="Female">Female</option>
                        </select>
                    </div>
                </form>
            </div>
        </div>
        <div class="extra content">
            <div class="left floated" data-bind="click: save">
                <i class="save icon"></i>
                Save
            </div>
            <div class="right floated" data-bind="click: undo">
                <i class="undo icon"></i>
                Undo
            </div>
        </div>
    </div>
</template>

<div class="ui segment">
    <a class="ui ribbon label">Ribbon</a>
</div>
<div class="ui vertical segment">
    <div class="ui very relaxed stackable page grid">
        <div class="row" data-bind="hidden: $data == null">
            <div class="column">
                <div class="ui top attached menu">
                    <div class="item">
                        <div class="ui transparent icon input">
                            <input type="text" placeholder="Search...">
                            <i class="search icon"></i>
                        </div>
                    </div>
                    <div class="right menu">
                        <a class="active green item">
                            <i class="grid layout icon"></i>
                        </a>
                        <a class="item">
                            <i class="block layout icon"></i>
                        </a>
                        <a class="item">
                            <i class="list layout icon"></i>
                        </a>
                    </div>
                </div>
                <div class="ui bottom attached segment">
                    <div id="class-roster" class="ui cards">
                        <div class="card" data-bind='component: "roster-card-add"'>
                        </div>
                        <!-- ko foreach: classRoster -->
                        <div class="card" data-bind='component: { name: "roster-card", params: { value: $data } }'></div>
                        <!-- /ko -->
                    </div>
                </div>
            </div>
        </div>

        <div class="row" data-bind="visible: $data == null">
            <div class="column">
                <h2 class="ui header">
                    Looks like you don't have a class!
                    <div class="sub header">To manage your students activities, first create a class. This will allow you to ... blah blah need copy here.</div>
                </h2>
                <div class="ui hidden divider"></div>
                <div class="ui form segment">
                    <form id="form-add-class" action="@(new ClassRequest().ToPostUrl())">
                        <h4 class="ui dividing header">Class Information</h4>
                        <div class="field">
                            <label>Display Name - How do you want parents to identify your class?</label>
                            <div class="field">
                                <input type="text" name="DisplayName" placeholder="Display Name">
                            </div>
                        </div>
                        <h5 class="ui header">Registration</h5>
                        <div class="field">
                            <div class="ui toggle checkbox">
                                <input type="radio" name="OpenRegistration" checked="checked">
                                <label>Allow <b>anyone</b> to see my class</label>
                            </div>
                        </div>
                        <div class="field">
                            <div class="ui toggle checkbox">
                                <input type="radio" name="OpenRegistration">
                                <label>Allow only <b>specific parents</b> with an invite code to see my class</label>
                            </div>
                        </div>
                        <div class="ui error message">
                            <div class="header">We noticed some issues</div>
                        </div>
                        <button type="submit" class="ui submit button">Register</button>
                    </form>
                </div>
            </div>
        </div>
    </div>
</div>
<script type="text/javascript">
    App.class = @this.Model.Class.AsRawJson();
    $(document).bindHandlers();

    $("#form-add-class").bindForm({
        success: function (r) {
            console.log("added class");
            //$(document).trigger('signed-in');
        }
    });

    ko.components.register('roster-card-add', {
        template: { element: 'roster-card-add-template' },
        viewModel: function (params) {
            // Data: student record
            this.showEdit = ko.observable(false);

            // Behaviors
            this.add = function() { this.showEdit(true); }.bind(this);
            this.undo = function() { console.log("undo"); }.bind(this);
            this.save = function() { $("#saveChild").form().submit(); }.bind(this);
            this.undo = function() { this.showEdit(false); }.bind(this);}
    });

    ko.components.register('roster-card', {
        template: { element: 'roster-card-template' },
        viewModel: function(params) {
            // Data: student record
            this.gender = params.value.gender;
            this.firstName = params.value.firstName;
            this.lastName = params.value.lastName;
            this.name = params.value.fullName;
            this.imagePath = "/img/" + this.gender + "1.png";
            this.showEdit = ko.observable(false);

            // Behaviors
            this.edit = function() { this.showEdit(true); }.bind(this);
            this.remove = function() { console.log("delete"); }.bind(this);
            this.save = function() { $("#saveChild").form().submit(); }.bind(this);
            this.undo = function() {  this.showEdit(false); }.bind(this);
        }
    });

    ko.applyBindings(App.class);
</script>